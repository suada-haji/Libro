package com.suadahaji.libro.dagger;

import com.suadahaji.libro.MainActivity;
import com.suadahaji.libro.api.ApiModule;

import javax.inject.Singleton;

import dagger.Component;

/**
 * @author Suada Haji (Suada.Haji@dstvdm.com)
 * @since 9/17/17 4:51 PM.
 *
 * Bridges the modules and the base application class
 * use a single instance of the value for all of its clients.
 */
@Singleton
@Component(modules = {AppModule.class, ApiModule.class})
public interface AppComponent {

    void inject(BaseApplication baseApplication);

    void inject(MainActivity mainActivity);

    final class Initializer {

        /**
         * In the init() method, DaggerAppComponent is autogenerated and
         * used to create the component.
         */
        static AppComponent init(BaseApplication app) {
            return DaggerAppComponent.builder()
                    .appModule(new AppModule(app))
                    .build();
        }
    }


}
